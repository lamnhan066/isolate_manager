name: Flutter_Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        sdk: [main, stable, beta]
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ matrix.sdk }}
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze
        run: dart analyze

      - name: Run tests on Chrome for the old Workers
        run: dart test --platform=chrome

      - name: Recompile Workers
        run: |
          dart run isolate_manager:generate -i test -o test/workers --single --sub-path workers --worker-mappings-experiment=test/isolate_manager_test.dart --obfuscate 0
          dart run isolate_manager:generate -i test -o test/workers --shared --sub-path workers --worker-mappings-experiment=test/isolate_manager_shared_test.dart --obfuscate 0

      # Should run on Chrome before the VM because it almost fails here when an issue occurs
      - name: Run tests on Chrome with dart2js compiler
        run: dart test --platform=chrome --compiler dart2js

      - name: Run tests on Chrome with dart2wasm compiler
        run: dart test --platform=chrome --compiler dart2wasm

      - name: Run tests on VM
        run: dart test --platform=vm

      - name: Generate coverage report
        run: dart test --platform=vm,chrome --compiler dart2js,dart2wasm --coverage=coverage

      - name: Format coverage report
        run: dart run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --report-on=lib --check-ignore

      - name: Convert to relative paths
        if: runner.os == 'Linux' || runner.os == 'Windows'
        run: sed -i 's|SF:.*/lib|SF:lib|' coverage/lcov.info
      
      - name: Convert to relative paths (macOS)
        if: runner.os == 'macOS'
        run: sed -i '' 's|SF:.*/lib|SF:lib|' coverage/lcov.info

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
